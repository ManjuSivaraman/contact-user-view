{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-service.service.ts","webpack:///src/app/contacts/contacts.component.ts","webpack:///src/app/contacts/contacts.component.html","webpack:///src/app/service/contactservice.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","authService","adminForm","emailAcc","password","login","value","signup","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","initializeApp","firebase","declarations","providers","bootstrap","AuthServiceService","firebaseAuth","console","log","auth","signInWithEmailAndPassword","err","message","email","createUserWithEmailAndPassword","providedIn","ContactsComponent","contact","gender","contactForm","name","required","number","dob","address","street","city","state","contacts","addCon","addContact","subscribe","responce","onSubmit","ContactserviceService","http","post","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthServiceService } from '../auth-service.service';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(public authService: AuthServiceService) { }\n\n  adminForm = new FormGroup({\n    emailAcc: new FormControl(''),\n    password: new FormControl('')\n  })\n  \n  login() {\n\n    this.authService.login(this.adminForm.value.emailAcc, this.adminForm.value.password);\n    \n  }\n\n  signup() {\n    this.authService.signup(this.adminForm.value.emailAcc, this.adminForm.value.password); \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row m-5\">\n        <div class=\"col-md-4 mx-auto shadow p-5\">\n            <form [formGroup]=\"adminForm\">\n                <h5 class=\"text-center mb-3\">Account</h5>\n                <input type=\"text\" class=\"form-control mb-3\" formControlName=\"emailAcc\" placeholder=\"Enter Email Id\">\n                <input type=\"text\" class=\"form-control mb-3\" formControlName=\"password\" placeholder=\"Enter Password\">\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\"btn btn-primary mr-2\" (click) = \"login()\">Log In</button>\n                    <button type=\"submit\" class=\"btn btn-secondary\" (click) = \"signup()\" >Sign Up</button>\n                </div>\n              </form>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'contact-details';\n}\n","<app-admin></app-admin>\n<!-- <app-contacts></app-contacts> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AdminComponent } from './admin/admin.component';\n\nimport { AngularFireModule } from 'angularfire2';\nimport { environment } from '../environments/environment';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AuthServiceService } from './auth-service.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactsComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule\n  ],\n  providers: [AuthServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\n// import * as firebase from 'firebase/app';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthServiceService {\n\n  // user; \n\n  constructor(private firebaseAuth: AngularFireAuth) {\n    // this.user = firebaseAuth.authState;\n   }\n\n   login(emailAcc: string, password: string) {\n     console.log(\"auth\", this.firebaseAuth.auth)\n    this.firebaseAuth\n      .auth\n      .signInWithEmailAndPassword(emailAcc, password)\n      .then(value => {\n        console.log('Login Success' , value);\n      })\n      .catch(err => {\n        console.log('Login Err', err.message);\n      });\n  }\n\n  signup(email: string, password: string) {\n    this.firebaseAuth\n      .auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(value => {\n        console.log('Sign Up Success', value);\n      })\n      .catch(err => {\n        console.log('Sign Up Err:', err.message);\n      });    \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ContactserviceService } from '../service/contactservice.service';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n\n  gender = [\"Male\", \"Female\"];\n\n  constructor(private contact: ContactserviceService) { }\n\n  contactForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    number: new FormControl('', Validators.required),\n    email: new FormControl(''),\n    dob: new FormControl(''),\n    gender: new FormControl(''),\n    address: new FormGroup({\n      street: new FormControl(''),\n      city: new FormControl(''),\n      state: new FormControl('')\n    })\n  })\n\n  onSubmit() {\n    var contacts = this.contactForm.value;\n    console.log(\"Contacts\" , contacts )\n    var addCon = this.contact.addContact(contacts)\n    console.log('addcon' , addCon)\n    addCon.subscribe(\n      responce => {\n        console.log(\"Add Responce\", responce)\n      },\n      err => {\n        console.log(\"add err\", err)\n      })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container font-family\">\n  <div class=\"row\">\n    <div class=\"col-md-6 border rounded m-5 mx-auto \">\n      <div class=\"row text-center font-style text-white bg-primary p-2\">\n        <div class=\"col-8\">Contacts</div>\n        <div type=\"button\" class=\"\" data-toggle=\"modal\" data-target=\"#myModal\">Add</div>\n        <div class=\"col-2\">Search</div>\n      </div>\n      <div class=\"text-muted m-2\">No Contacts Found</div>\n    </div>\n  </div>\n</div>\n\n<!-- Pop Up Form -->\n<div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\n  <div class=\"modal-dialog modal-sm\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header bg-primary text-white p-0 p-2\">\n        <h4 class=\"modal-title\">New Contact</h4>\n      </div>\n      <div class=\"modal-body mx-auto\">\n        <form [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit()\">\n          <div>\n            <input type=\"text\" class=\"form-control m-2\" formControlName=\"name\" placeholder=\"Name\">\n            <span *ngIf=\"!contactForm.get('name').valid && contactForm.get('name').touched\">Please Enter Name</span>\n          </div>\n          <div>\n            <input type=\"number\" class=\"form-control m-2\" formControlName=\"number\" placeholder=\"Phone Number\">\n          </div>\n          <input type=\"email\" class=\"form-control m-2\" formControlName=\"email\" placeholder=\"E-Mail\">\n          <input type=\"date\" class=\"form-control m-2\" formControlName=\"dob\">\n          <div *ngFor = \"let gen of gender\">\n            <label><input type=\"radio\" formControlName=\"gender\" class=\"mr-1\" [value]= \"gen\">{{gen}}</label>\n          </div>\n          <div formGroupName=\"address\">\n            <input type=\"text\" class=\"form-control m-2\" formControlName=\"street\" placeholder=\"Street\">\n            <input type=\"text\" class=\"form-control m-2\" formControlName=\"city\" placeholder=\"city\">\n            <input type=\"text\" class=\"form-control m-2\" formControlName=\"state\" placeholder=\"state\">\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!contactForm.valid\">Add</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ContactserviceService {\n\n  constructor(private http : HttpClient ) { }\n\n  addContact(contacts){\n    return this.http.post('https://node-apitest-inclabs.herokuapp.com/create' , contacts)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase : {\n    apiKey: \"AIzaSyDMsEtcF5W4D4ZTI0bdfvqdyB91wICEhYE\",\n    authDomain: \"admin-6329e.firebaseapp.com\",\n    databaseURL: \"https://admin-6329e.firebaseio.com\",\n    projectId: \"admin-6329e\",\n    storageBucket: \"admin-6329e.appspot.com\",\n    messagingSenderId: \"124748011902\",\n    appId: \"1:124748011902:web:9783cca1ebab6d01b1bb2f\",\n    measurementId: \"G-ELLVXN8ZQS\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}